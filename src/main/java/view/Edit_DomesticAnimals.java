/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import control.MainClass;
import javax.swing.JOptionPane;
import utility.DomesticAnimal;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author SANTIAGO
 */
public class Edit_DomesticAnimals extends javax.swing.JFrame {
    MainClass mainClass;
    /**
     * Creates new form Edit_Animals
     * @param dptLogistic
     */
    public Edit_DomesticAnimals(MainClass mainClass) {
        this.mainClass = mainClass;
        initComponents();
        setLocationRelativeTo(this);
    }

    Edit_DomesticAnimals() {
        
    }
    //método para vaciar los campos de texto
    void setNull(){
        boxCode.setText("");
        boxCodeDelete.setText("");
        boxCodeEdit.setText("");
        boxEditKidness.setText("");
        boxEditName.setText("");
        boxEditWeigth.setText("");
        boxKidness.setText("");
        boxName.setText("");
        boxSpecies.setText("");
        boxType.setText("");
        boxWeigth.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        boxCode = new javax.swing.JTextField();
        boxName = new javax.swing.JTextField();
        boxType = new javax.swing.JTextField();
        boxWeigth = new javax.swing.JTextField();
        boxKidness = new javax.swing.JTextField();
        boxSpecies = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        boxCodeEdit = new javax.swing.JTextField();
        boxEditName = new javax.swing.JTextField();
        boxEditWeigth = new javax.swing.JTextField();
        boxEditKidness = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        boxCodeDelete = new javax.swing.JTextField();
        buttonEdit = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonAdd = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 102));
        jLabel5.setText("Animales Domesticos");

        jTable1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Nombre", "Tipo", "peso", "Especie", "Amabilidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel9.setText("Código: ");

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel2.setText("Nombre: ");

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel3.setText("Tipo:");

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel4.setText("Peso:");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel7.setText("Especie:");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel8.setText("Amabilidad:");

        boxCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCodeActionPerformed(evt);
            }
        });
        boxCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxCodeKeyTyped(evt);
            }
        });

        boxName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxNameKeyTyped(evt);
            }
        });

        boxType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxTypeKeyTyped(evt);
            }
        });

        boxWeigth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxWeigthActionPerformed(evt);
            }
        });

        boxKidness.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxKidnessKeyTyped(evt);
            }
        });

        boxSpecies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxSpeciesKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel13.setText("Código:");

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel11.setText("Nombre:");

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel14.setText("Peso:");

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel16.setText("Amabilidad:");

        boxCodeEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCodeEditActionPerformed(evt);
            }
        });
        boxCodeEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                boxCodeEditKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxCodeEditKeyTyped(evt);
            }
        });

        boxEditName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxEditNameActionPerformed(evt);
            }
        });
        boxEditName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxEditNameKeyTyped(evt);
            }
        });

        boxEditWeigth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxEditWeigthActionPerformed(evt);
            }
        });
        boxEditWeigth.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxEditWeigthKeyTyped(evt);
            }
        });

        boxEditKidness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxEditKidnessActionPerformed(evt);
            }
        });
        boxEditKidness.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxEditKidnessKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel6.setText("Código:");

        boxCodeDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCodeDeleteActionPerformed(evt);
            }
        });
        boxCodeDelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boxCodeDeleteKeyTyped(evt);
            }
        });

        buttonEdit.setBackground(new java.awt.Color(0, 0, 102));
        buttonEdit.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        buttonEdit.setForeground(new java.awt.Color(255, 255, 255));
        buttonEdit.setText("Editar");
        buttonEdit.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonDelete.setBackground(new java.awt.Color(0, 0, 102));
        buttonDelete.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(255, 255, 255));
        buttonDelete.setText("Eliminar");
        buttonDelete.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonAdd.setBackground(new java.awt.Color(0, 0, 102));
        buttonAdd.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        buttonAdd.setForeground(new java.awt.Color(255, 255, 255));
        buttonAdd.setText("Agregar");
        buttonAdd.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonBack.setBackground(new java.awt.Color(0, 0, 102));
        buttonBack.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        buttonBack.setForeground(new java.awt.Color(255, 255, 255));
        buttonBack.setText("Regresar");
        buttonBack.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(212, 212, 212))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(44, 44, 44)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boxKidness, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel9))
                                        .addGap(23, 23, 23)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(boxCode, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(boxName, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(boxWeigth, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(boxCodeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(boxEditName, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel11)
                                                        .addComponent(jLabel14))
                                                    .addGap(32, 32, 32)
                                                    .addComponent(boxEditWeigth, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel16)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(boxEditKidness, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(47, 47, 47)
                                        .addComponent(boxType, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(52, 52, 52)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boxCodeDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(56, 56, 56))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxCodeEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(boxCodeDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(boxCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(boxName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(boxEditName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(boxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(boxEditWeigth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(boxWeigth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(boxEditKidness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(boxKidness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(boxSpecies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        Animals_Control animals_Control = new Animals_Control(mainClass);
        animals_Control.setVisible(true);
        dispose();
        setNull();
    }//GEN-LAST:event_buttonBackActionPerformed
    private void loadAnimalsToTable() {
        // Obtener el modelo de datos de la tabla jTable1
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        // Limpiar la tabla antes de cargar los datos
        model.setRowCount(0);

        // Recorrer la lista de animales y agregarlos a la tabla
        for (DomesticAnimal animal : mainClass.getDptLogistic().arraysControl.getDomesticAnimals()) {
            Object[] newRow = {animal.getCode(), animal.getName(), animal.getType(), animal.getWeigth(), animal.getSpecie(), animal.getKindnessLevel()};
            model.addRow(newRow);
        }
    
}
    private void boxCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxCodeActionPerformed

    private void boxEditWeigthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxEditWeigthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxEditWeigthActionPerformed

    private void boxWeigthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxWeigthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxWeigthActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // Obtener el código del animal a editar
    String code = boxCodeEdit.getText();

    // Obtener el modelo de datos de la tabla
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

    // Buscar el animal en la tabla utilizando el código
    int rowCount = model.getRowCount();
    int rowIndex = -1;
    for (int i = 0; i < rowCount; i++) {
        if (model.getValueAt(i,0).equals(code)) {
            rowIndex = i;
            break;
        }
    }

    // Verificar si se encontró el animal en la tabla
    if (rowIndex >= 0) {
        // Obtener los valores antiguos del animal
        String oldName = (String) model.getValueAt(rowIndex, 1);
        String oldWeight = (String) model.getValueAt(rowIndex, 3);
        String oldKindness = (String) model.getValueAt(rowIndex, 5);      

        // Obtener los nuevos valores del animal a editar
        String newKindness = boxEditKidness.getText();
        String newName = boxEditName.getText();
        String newWeight = boxEditWeigth.getText();

        // Comprobar si los campos están vacíos y utilizar los valores antiguos si es así
        if (newName.isEmpty()) {
            newName = oldName;
        }
        if (newWeight.isEmpty()) {
            newWeight = oldWeight;
        }
        if (newKindness.isEmpty()) {
            newKindness = oldKindness;
        }

        // Crear un nuevo objeto DomesticAnimal con los nuevos datos del animal
        DomesticAnimal domesticAnimal = new DomesticAnimal("", newKindness, code, newName, newWeight, "");

        // Actualizar el animal en el departamento logístico
        mainClass.getDptLogistic().editDomesticAnimals(code, domesticAnimal);

        // Actualizar los datos del modelo con los nuevos valores del animal editado
        model.setValueAt(newName, rowIndex, 1);
        model.setValueAt(newWeight, rowIndex, 3);
        model.setValueAt(newKindness, rowIndex, 5);

        // Limpiar los campos del formulario
        setNull();
    } else {
        showMessageDialog(null, "No se encontró el animal con el código " + code);
    }
    
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        // Obtener los datos del formulario
    String species = boxSpecies.getText();
    String kindness = boxKidness.getText();
    String code = boxCode.getText();
    String name = boxName.getText();
    String weight = boxWeigth.getText();
    String type = boxType.getText();

    // Validar que todos los campos estén llenos
    if (species.isEmpty() || kindness.isEmpty() || code.isEmpty() || name.isEmpty() || weight.isEmpty() || type.isEmpty()) {
        showMessageDialog(null, "Por favor, llene todos los campos");
        return;
    }

    // Crear un nuevo objeto DomesticAnimal
    DomesticAnimal domesticAnimal = new DomesticAnimal(species, kindness, code, name, weight, type);

    // Verificar si el animal ya existe
    if (mainClass.getDptLogistic().animalExits(code)) {
        showMessageDialog(null, "El animal ya existe");
    } else {
        // Agregar el animal al departamento logístico
        mainClass.getDptLogistic().addDomesticAnimals(domesticAnimal);
        showMessageDialog(null, "El animal fue agregado correctamente");

        // Obtener el modelo de datos de la tabla jTable1
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Agregar una nueva fila con los datos del nuevo animal
        Object[] newRow = {code, name,type,weight,species, kindness,   };
        model.addRow(newRow);
        
   

        // Limpiar los campos del formulario
        setNull();
    }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void boxCodeDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCodeDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxCodeDeleteActionPerformed

    private void boxCodeEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCodeEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxCodeEditActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        // TODO add your handling code here:
        mainClass.getDptLogistic().deleteAnimal(boxCodeDelete.getText(), "domestico");
        setNull();
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void boxCodeDeleteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxCodeDeleteKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;
        boolean backSpace = key == 8;
        
        if (!(numeros||backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Numéricos");
        }

    }//GEN-LAST:event_boxCodeDeleteKeyTyped

    private void boxCodeEditKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxCodeEditKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;
        boolean backSpace = key == 8;
        
        if (!(numeros||backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Numéricos");
        }

    }//GEN-LAST:event_boxCodeEditKeyTyped

    private void boxEditNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxEditNameKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean backSpace = key == 8;
            
        if (!(minusculas || mayusculas || espacio || backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Alfabéticos");
           
        }
    }//GEN-LAST:event_boxEditNameKeyTyped

    private void boxCodeEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxCodeEditKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxCodeEditKeyPressed

    private void boxEditKidnessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxEditKidnessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxEditKidnessActionPerformed

    private void boxEditNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxEditNameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_boxEditNameActionPerformed

    private void boxEditWeigthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxEditWeigthKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;
        boolean backSpace = key == 8;
        
        if (!(numeros||backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Numéricos");
        }

    }//GEN-LAST:event_boxEditWeigthKeyTyped

    private void boxEditKidnessKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxEditKidnessKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean backSpace = key == 8;
            
        if (!(minusculas || mayusculas || espacio || backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Alfabéticos");
           
        }
    }//GEN-LAST:event_boxEditKidnessKeyTyped

    private void boxCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxCodeKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;
        boolean backSpace = key == 8;
        
        if (!(numeros||backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Numéricos");
        }
    }//GEN-LAST:event_boxCodeKeyTyped

    private void boxTypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxTypeKeyTyped
        // TODO add your handling code here:
         int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean backSpace = key == 8;
            
        if (!(minusculas || mayusculas || espacio || backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Alfabéticos");
           
        }
    }//GEN-LAST:event_boxTypeKeyTyped

    private void boxSpeciesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxSpeciesKeyTyped
        // TODO add your handling code here:
         int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean backSpace = key == 8;
            
        if (!(minusculas || mayusculas || espacio || backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Alfabéticos");
           
        }
    }//GEN-LAST:event_boxSpeciesKeyTyped

    private void boxKidnessKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxKidnessKeyTyped
        // TODO add your handling code here:
         int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean backSpace = key == 8;
            
        if (!(minusculas || mayusculas || espacio || backSpace)){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Alfabéticos");
           
        }
    }//GEN-LAST:event_boxKidnessKeyTyped

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
           loadAnimalsToTable();
    }//GEN-LAST:event_formWindowActivated

    private void boxNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boxNameKeyTyped
        // TODO add your handling code here:
        int key = evt.getKeyChar();

        boolean mayusculas = key >= 65 && key <= 90;
        boolean minusculas = key >= 97 && key <= 122;
        boolean espacio = key == 32;
        boolean backSpace = key == 8;

        if (!(minusculas || mayusculas || espacio || backSpace)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Ingrese solo carácteres Alfabéticos");

        }
    }//GEN-LAST:event_boxNameKeyTyped
                                                                  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit_DomesticAnimals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit_DomesticAnimals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit_DomesticAnimals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit_DomesticAnimals.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edit_DomesticAnimals().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField boxCode;
    private javax.swing.JTextField boxCodeDelete;
    private javax.swing.JTextField boxCodeEdit;
    private javax.swing.JTextField boxEditKidness;
    private javax.swing.JTextField boxEditName;
    private javax.swing.JTextField boxEditWeigth;
    private javax.swing.JTextField boxKidness;
    private javax.swing.JTextField boxName;
    private javax.swing.JTextField boxSpecies;
    private javax.swing.JTextField boxType;
    private javax.swing.JTextField boxWeigth;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
